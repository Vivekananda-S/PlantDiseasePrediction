{"version":3,"sources":["cblogo.PNG","bg.png","home.js","App.js","reportWebVitals.js","index.js"],"names":["ColorButton","withStyles","theme","root","color","palette","getContrastText","common","white","backgroundColor","Button","axios","require","default","useStyles","makeStyles","grow","flexGrow","clearButton","width","borderRadius","padding","fontSize","fontWeight","maxWidth","media","height","paper","spacing","margin","gridContainer","justifyContent","mainContainer","backgroundImage","image","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","imageCard","boxShadow","imageCardEmpty","noImage","input","display","uploadIcon","background","tableContainer","table","tableHead","tableRow","tableCell","borderColor","tableCell1","tableBody","text","textAlign","buttonGrid","detail","flexDirection","alignItems","appbar","loader","ImageUpload","classes","useState","selectedFile","setSelectedFile","preview","setPreview","data","setData","setImage","isLoading","setIsloading","sendFile","a","formData","FormData","append","method","url","process","res","status","useEffect","objectUrl","URL","createObjectURL","undefined","parseFloat","confidence","toFixed","Fragment","AppBar","position","className","Toolbar","Typography","title","variant","noWrap","Avatar","src","cblogo","Container","disableGutters","Grid","container","direction","item","xs","Card","CardActionArea","CardMedia","component","CardContent","content","acceptedFiles","dropzoneText","onChange","files","length","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","scope","class","CircularProgress","onClick","startIcon","style","borderCollapse","border","culture","sanitation","resistance","chemicalcontrol","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5db2d7f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cblogo.6a21c367.PNG\";","export default __webpack_public_path__ + \"static/media/bg.d6836046.png\";","import { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\r\nimport cblogo from \"./cblogo.PNG\";\r\nimport image from \"./bg.png\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { common } from '@material-ui/core/colors';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport Camera from \"./camera\";\r\nimport TablePest from \"./TablePest\";\r\n\r\n\r\n\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(common.white),\r\n    backgroundColor: common.white,\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff7a',\r\n    },\r\n  },\r\n}))(Button);\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  clearButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    height: \"93vh\",\r\n    marginTop: \"8px\",\r\n  },\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 500,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\r\n    borderRadius: '15px',\r\n  },\r\n  imageCardEmpty: {\r\n    height: 'auto',\r\n  },\r\n  noImage: {\r\n    margin: \"auto\",\r\n    width: 400,\r\n    height: \"400 !important\",\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  uploadIcon: {\r\n    background: 'white',\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: 'transparent !important',\r\n    boxShadow: 'none !important',\r\n  },\r\n  table: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableRow: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableCell: {\r\n    fontSize: '22px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableCell1: {\r\n    fontSize: '14px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableBody: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  text: {\r\n    color: 'white !important',\r\n    textAlign: 'center',\r\n  },\r\n  buttonGrid: {\r\n    maxWidth: \"416px\",\r\n    width: \"100%\",\r\n  },\r\n  detail: {\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  appbar: {\r\n    background: '#be6a77',\r\n    boxShadow: 'none',\r\n    color: 'white'\r\n  },\r\n  loader: {\r\n    color: '#be6a77 !important',\r\n  }\r\n}));\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  let confidence = 0;\r\n\r\n  const sendFile = async () => {\r\n    if (image) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      let res = await axios({\r\n        method: \"post\",\r\n        url: process.env.REACT_APP_API_URL,\r\n        data: formData,\r\n      });\r\n      if (res.status === 200) {\r\n        setData(res.data);\r\n      }\r\n      setIsloading(false);\r\n    }\r\n  }\r\n\r\n  const clearData = () => {\r\n    setData(null);\r\n    setImage(false);\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    setIsloading(true);\r\n    sendFile();\r\n  }, [preview]);\r\n\r\n  const onSelectFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    setImage(true);\r\n  };\r\n\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Plant Disease Prediction\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <Avatar src={cblogo}></Avatar>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth={false} className={classes.mainContainer} disableGutters={true}>\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className={`${classes.imageCard} ${!image ? classes.imageCardEmpty : ''}`}>\r\n              {image && <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={preview}\r\n                  component=\"image\"\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n              </CardActionArea>\r\n              }\r\n              {!image && <CardContent className={classes.content}>\r\n              {/* <TableContainer component={Paper} className={classes.tableContainer}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <Camera/>\r\n                    </TableCell>\r\n                    <TableCell> */}\r\n                      <DropzoneArea\r\n                        acceptedFiles={['image/*']}\r\n                        dropzoneText={\"Drag and drop an image of a plant leaf to process\"}\r\n                        onChange={onSelectFile}\r\n                      />\r\n                    {/* </TableCell>\r\n\r\n                  </TableRow>\r\n                </Table>\r\n                </TableContainer> */}\r\n              </CardContent>}\r\n              {data && <CardContent className={classes.detail}>\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                  <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Disease Type:</TableCell>\r\n                        {/* <TableCell align=\"right\" className={classes.tableCell1}>Pesticide:</TableCell> */}\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                          {data.class}\r\n                        </TableCell>\r\n                        {/* <TableCell align=\"right\" className={classes.tableCell}>{confidence}%</TableCell> */}\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>}\r\n              {isLoading && <CardContent className={classes.detail}>\r\n                <CircularProgress color=\"secondary\" className={classes.loader} />\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  Processing\r\n                </Typography>\r\n              </CardContent>}\r\n            </Card>\r\n          </Grid>\r\n          {/* {data && \r\n              <Paper>\r\n                {data.pesticide}\r\n              </Paper>\r\n          } */}\r\n          {data &&\r\n            <Grid item className={classes.buttonGrid} >\r\n              <ColorButton variant=\"contained\" className={classes.clearButton} color=\"primary\" component=\"span\" size=\"large\">\r\n                Treatment Information\r\n              </ColorButton>\r\n            </Grid>}\r\n          {data &&\r\n            <Grid item className={classes.buttonGrid} >\r\n\r\n              <ColorButton variant=\"contained\" className={classes.clearButton} color=\"primary\" component=\"span\" size=\"large\" onClick={clearData} startIcon={<Clear fontSize=\"large\" />}>\r\n                Clear\r\n              </ColorButton>\r\n            </Grid>}\r\n            {data &&\r\n            <>\r\n            \r\n            <table style={{backgroundColor: \"#f2f2f2\",borderCollapse: \"collapse\", width: \"100%\"}}>\r\n              <thead style={{backgroundColor: \"#f2f2f2\"}}>\r\n                <tr>\r\n                  <th style={{border: \"1px solid black\", padding: \"8px\"}}>Information Name</th>\r\n                  <th style={{border: \"1px solid black\", padding: \"8px\"}}>Details</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td style={{border: \"1px solid black\", padding: \"8px\"}}>Disease Type</td>\r\n                  <td style={{border: \"1px solid black\", padding: \"8px\"}}>{data.class}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{border: \"1px solid black\", padding: \"8px\"}}>Culture</td>\r\n                  <td style={{border: \"1px solid black\", padding: \"8px\"}}>{data.culture}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{border: \"1px solid black\", padding: \"8px\"}}>Sanitation</td>\r\n                  <td style={{border: \"1px solid black\", padding: \"8px\"}}>{data.sanitation}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{border: \"1px solid black\", padding: \"8px\"}}>Resistance</td>\r\n                  <td style={{border: \"1px solid black\", padding: \"8px\"}}>{data.resistance}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{border: \"1px solid black\", padding: \"8px\"}}>Chemical Control</td>\r\n                  <td style={{border: \"1px solid black\", padding: \"8px\"}}>{data.chemicalcontrol}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            </>\r\n            }\r\n        </Grid >\r\n      </Container >\r\n    </React.Fragment >\r\n  );\r\n};\r\n","import { ImageUpload } from \"./home.js\";\n\nfunction App() {\n  return <ImageUpload />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}